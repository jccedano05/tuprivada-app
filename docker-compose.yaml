version: '3.8'

services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: aynicomunidad
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: ${POSTGRES_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: 1000
      SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: 10
      SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: 100
      SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT: 10000
      SPRING_DATASOURCE_HIKARI_MAX_LIFETIME: 1800000
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_TIME_EXPIRATION: ${JWT_TIME_EXPIRATION}
      AWS_S3_BUCKETNAME: ${AWS_S3_BUCKETNAME}
      AWS_ACCESSKEYID: ${AWS_ACCESSKEYID}
      AWS_SECRETACCESSKEY: ${AWS_SECRETACCESSKEY}
      AWS_S3_REGION: ${AWS_S3_REGION}
      ONESIGNAL_APP_ID: ${ONESIGNAL_APP_ID}
      ONESIGNAL_API_KEY: ${ONESIGNAL_API_KEY}

volumes:
  postgres_data:
